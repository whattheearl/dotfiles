#!/usr/bin/env bash

# INFO: powerline10k
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# INFO: alias
alias a="dev action"
alias ac="docker compose -f ~/tyl/tcp-admincenter/docker-compose.yml"
alias ai="qwnc"
alias alert="espeak 'weewoo weewoo weewoo'"
alias api="dev run api"
alias bff="dev run bff"
alias bs="docker compose -f ~/tyl/tcp-branding-api/docker-compose.yaml"
alias cla="dev ai --model=anthropic/claude-opus-4.1"
alias client="dev run client"
alias cp-editconfig="cp ~/wte/dotfiles/templates/.editorconfig ."
alias cp-make="cp ~/wte/dotfiles/templates/Makefile ."
alias cp-npmrc="cp ~/wte/dotfiles/templates/.npmrc ."
alias cp-nugetconfig="cp ~/wte/dotfiles/templates/NuGet.config ."
alias cp-prettierrc="cp ~/wte/dotfiles/templates/.prettierrc ."
alias csd="docker compose -f ~/tyl/tcp-community-service-dev-compose/docker-compose.yml -f ~/tyl/tcp-community-service-dev-compose/infrastructure/docker-compose.yml"
alias d="dev deploy"
alias db="mariadb -uuser -ppassword --ssl-verify-server-cert=0 -P 3306"
alias dev="${HOME}/tyl/dev-cli/src/index.js"
alias ff="firefox"
alias format="dev format"
alias gem="dev ai --model=google/gemini-2.5-pro"
alias grok="dev ai --model=x-ai/grok-4-fast"
alias github="dev browse github"
alias goto='cd "$(fd -t f | fzf | xargs dirname)"'
alias gpt="dev ai --model=openai/gpt-5"
alias gptc="dev ai --model=openai/gpt-5-codex"
alias harness="dev browse harness"
alias k2="dev ai --model=moonshotai/kimi-k2"
alias lg="lazygit"
alias lint="dev run lint"
alias n="cd ~/wte/notes && nvim ~/wte/notes/todo.md"
alias oss="dev ai -m openai/gpt-oss-120b"
alias pr="dev pr"
alias push="git add . && git commit -m 'update' && git push"
alias qwni="dev ai -m qwen/qwen3-next-80b-a3b-instruct"
alias qwnc="dev ai -m qwen/qwen3-coder"
alias rag="node -C ~/tyl/rag/cli/ ~/tyl/rag/cli/src/main.ts"
alias tcp="docker compose -f ~/tyl/platform-dev-environment-compose/docker-compose.yml"
alias tid="docker compose -f ~/tyl/platform-dev-environment-compose/docker-compose.yml -f ~/tyl/platform-dev-environment-compose/docker-compose.tid.yml"
alias tidup="tid up -d && tidwait"
alias tidwait="make -C ${HOME}/tyl/platform-dev-environment-compose wait-for-docker-up"
alias ui="docker compose -f ~/tyl/tcp-user-import-api/docker-compose.yml"
alias v="nvim"
alias web="dev browse web"

# INFO: functions
start() {
    cd ~/tyl/tcp-ops-center
    tidup
    bff
    client
    espeak 'RUNNING. weewoo weewoo weewoo' &> /dev/null
}
stop() {
    tid down
    pkill node
    pkill dotnet
    espeak 'STOPPED. weewoo weewoo weewoo' &> /dev/null
}
retry() {
    while ! $($@); do
        echo "Command failed, retrying in 5 seconds..."
        sleep 5
    done
}

# INFO: path
[ -d "$HOME/.nvm" ] && export NVM_DIR=$HOME/.nvm
export BUN_INSTALL="$HOME/.bun"
export DOTNET_CLI_TELEMETRY_OPTOUT='true'
export EDITOR=nvim
export HUSKY=0
export MANPAGER='nvim +Man!'
export NODE_OPTIONS="--experimental-strip-types"
export PATH="$BUN_INSTALL/bin:$PATH"
export PATH=$PATH:$HOME/.dotnet/tools
export PATH=$PATH:$HOME/wte/dotfiles/scripts
export PATH=$PATH:/home/jon/.local/bin
export ZSH="$HOME/.oh-my-zsh"
plugins=(git docker docker-compose)
VI_MODE_RESET_PROMPT_ON_MODE_CHANGE=true
VI_MODE_SET_CURSOR=true
ZSH_CACHE_DIR=$HOME/.cache/oh-my-zsh
[ ! -d "$ZSH_CACHE_DIR" ] && mkdir $ZSH_CACHE_DIR
ZSH_THEME=""

# INFO: source
[ -d "$HOME/.oh-my-zsh" ] && source $HOME/.oh-my-zsh/oh-my-zsh.sh
[ -d "$HOME/.zsh/powerlevel10k" ] && source $HOME/.zsh/powerlevel10k/powerlevel10k.zsh-theme
[ -d "$HOME/.zsh/zsh-autosuggestions" ] && source $HOME/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
[ -d "$HOME/.zsh/zsh-history-substring-search" ] && source $HOME/.zsh/zsh-history-substring-search/zsh-history-substring-search.zsh
[ -d "$HOME/.zsh/zsh-syntax-highlighting" ] && source $HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[ -d "/usr/share/nvm" ] && source /usr/share/nvm/init-nvm.sh && source /usr/share/nvm/bash_completion
[ -s "$NVM_DIR/bash_completion" ] && \. $NVM_DIR/bash_completion
[ -d "$NVM_DIR/nvm.sh" ] && \. $NVM_DIR/nvm.sh
[ -s "$HOME/.bun/_bun" ] && source $HOME/.bun/_bun
[ -s "$HOME/.fzf.zsh" ] && source $HOME/.fzf.zsh
[ -s "$HOME/.p10k.zsh" ] && source $HOME/.p10k.zsh
[ -s "$HOME/.secrets" ] && source $HOME/.secrets
